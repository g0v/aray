type EventAttendance
  @model
  @key(name: "byEventIdByStatus",
    fields: ["eventId","status"], queryField: "getEventAttendancesByEventIdByStatus")
  @key(name: "byUsernameByCreatedAt",
    fields: ["username","createdAt"], queryField: "getEventAttendancesByUsernameByCreatedAt")
  @auth(rules: [
    { allow: public, operations: [read] },
    # update through custom resovler (need to update the event.attendanceCount)
    { allow: groups, groups: ["Users"], operations: [read] },
    { allow: groups, groups: ["Admins"] },
  ])
{
  id: ID!
  eventId: ID!
  username: String!
  status: EventAttendanceStatus!
  note: String

  createdAt: AWSDateTime!
  createdBy: String!
  updatedAt: AWSDateTime!
  updatedBy: String!
}

enum EventAttendanceStatus {
  pending
  attending # event.attendanceCount +1
  attended
  notAttended # event.attendanceCount -1 
}