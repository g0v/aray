type CreateOrUpdateProjectResponse {
  # errors: [String] @aws_cognito_user_pools
  # message: String @aws_cognito_user_pools
  id: String @aws_cognito_user_pools
}

input CreateOrUpdateProjectRequest {
  id: ID # optional for update
  status: ProjectStatus!
  # owner
  managers: [String]
  name: String!
  altName: String
  summary: String
  description: String
  links: [ProjectLinkRequest]
  slackChannel: String
  slackChannelUrl: AWSURL
  intros: [ProjectIntroRequest]
}

input ProjectLinkRequest {
  name: String!
  url: String!
}

input ProjectIntroRequest {
  languageCode: String! # zh-TW, ja, ko, en-US
  name: String!
  altName: String
  summary: String
  description: String
}

input ProjectItemRequest {
  id: ID!
  label: String!
}

# Project contributions
type CreateOrUpdateProjectContributionsResponse {
  # errors: [String] @aws_cognito_user_pools
  # message: String @aws_cognito_user_pools
  data: [ID] @aws_cognito_user_pools
}

input CreateOrUpdateProjectContributionsRequest {
  projectId: ID!
  contributions: [ProjectContributionRequest]
}

input ProjectContributionRequest {
  id: ID # optional for update
  username: String!
  projectId: ID!
  projectTaskId: ID
  summary: String!
  description: String
  hours: Float!
}

# Project Owner
type ChangeProjectOwnerResponse {
  id: String @aws_cognito_user_pools
}

input ChangeProjectOwnerRequest {
  projectId: ID
  newOwner: String!
}

# Project Event
type CreateOrUpdateEventAttendanceResponse {
  id: String @aws_cognito_user_pools
}

input CreateOrUpdateEventAttendanceRequest {
  id: ID
  eventId: ID!
  username: String! # use from the request
  status: EventAttendanceStatus!
  note: String
}
